FROM jenkins/jenkins:2.445-jdk17

MAINTAINER Andrej988

# switching to root user for installation of additional apps
USER root


#==========================================================================================================================================
# Maven (NOT USED AT THE MOMENT)
#==========================================================================================================================================
#ENV MAVEN_VERSION 3.6.3
#
#RUN curl -fsSL http://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz | tar xzf - -C /usr/share \
#  && mv /usr/share/apache-maven-$MAVEN_VERSION /usr/share/maven \
#  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn

#ENV MAVEN_HOME /usr/share/maven
#RUN mvn -version
#==========================================================================================================================================


#==========================================================================================================================================
# Docker
#==========================================================================================================================================
RUN apt-get update && apt-get install -qqy \
    ca-certificates \
    curl \
    gnupg \
    lsb-release

RUN mkdir -p /etc/apt/keyrings
RUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg

RUN echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
  $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
  
RUN apt-get update && apt-get install -qqy docker-ce docker-ce-cli containerd.io docker-compose-plugin
#==========================================================================================================================================


#==========================================================================================================================================
# MySQL/MariaDB client
#==========================================================================================================================================
RUN apt-get install -qqy mariadb-client
#==========================================================================================================================================


#==========================================================================================================================================
# rsync
#==========================================================================================================================================
RUN apt-get install -qqy rsync sshpass
#==========================================================================================================================================


#==========================================================================================================================================
# Postgres client
#==========================================================================================================================================
RUN curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor | tee /etc/apt/trusted.gpg.d/apt.postgresql.org.gpg >/dev/null
RUN echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list
RUN apt-get update && apt-get install -qqy postgresql-client-15
#==========================================================================================================================================


#==========================================================================================================================================
# Influxdb CLI
#==========================================================================================================================================
RUN mkdir -p /tmp/influx-cli/extract/
RUN curl https://dl.influxdata.com/influxdb/releases/influxdb2-client-2.7.3-linux-amd64.tar.gz -o /tmp/influx-cli/influxdb2-client.tar.gz
RUN tar xvzf /tmp/influx-cli/influxdb2-client.tar.gz -C /tmp/influx-cli/extract/
RUN cp /tmp/influx-cli/extract/influx /usr/local/bin/
#==========================================================================================================================================


#==========================================================================================================================================
# Liquibase CLI
#==========================================================================================================================================
RUN mkdir -p /tmp/liquibase/extract/
RUN curl https://github.com/liquibase/liquibase/archive/refs/tags/v4.22.0.tar.gz -L -o /tmp/liquibase/liquibase.tar.gz
RUN tar xvzf /tmp/liquibase/liquibase.tar.gz -C /tmp/liquibase/extract/
RUN ln -s /tmp/liquibase/extract/liquibase /usr/bin/liquibase
#==========================================================================================================================================


#==========================================================================================================================================
# tree
#==========================================================================================================================================
RUN apt-get install -y tree
#==========================================================================================================================================


#==========================================================================================================================================
# Ansible
#==========================================================================================================================================
RUN curl -fsSL "https://keyserver.ubuntu.com/pks/lookup?fingerprint=on&op=get&search=0x6125E2A8C77F2818FB7BD15B93C4A3FD7BB9C367" | gpg --dearmour -o /usr/share/keyrings/ansible-archive-keyring.gpg
RUN echo "deb [signed-by=/usr/share/keyrings/ansible-archive-keyring.gpg] http://ppa.launchpad.net/ansible/ansible/ubuntu jammy main" | tee /etc/apt/sources.list.d/ansible.list
RUN apt-get update \
&& apt install -qqy ansible
#==========================================================================================================================================


#==========================================================================================================================================
# Can be used to pre-install jenkins plugins from plugins.txt
#==========================================================================================================================================
#COPY ./plugins.txt /usr/share/jenkins/ref/plugins.txt
#RUN jenkins-plugin-cli -f /usr/share/jenkins/ref/plugins.txt
#==========================================================================================================================================


#==========================================================================================================================================
# Can be used to:
# - Update the username and password
# - Save id_rsa.pub file to /root/.ssh/
# - Allows to skip Jenkins setup wizard
# - Creating default admin user (Jenkins runs all grovy files from init.groovy.d dir)
# - Define a jenkins home volume
#==========================================================================================================================================
#ENV JENKINS_USER admin
#ENV JENKINS_PASS admin

#RUN ssh-keygen -f /root/.ssh/id_rsa -t rsa -N ''

#ENV JAVA_OPTS -Djenkins.install.runSetupWizard=false

# COPY default-user.groovy /usr/share/jenkins/ref/init.groovy.d/

# VOLUME /var/jenkins_home
#==========================================================================================================================================


#==========================================================================================================================================
# Docker group
#==========================================================================================================================================
RUN usermod -aG docker jenkins
#==========================================================================================================================================


#==========================================================================================================================================
# Switching to user jenkins (NOT USED AT THE MOMENT)
#==========================================================================================================================================
#USER jenkins
#==========================================================================================================================================


#==========================================================================================================================================
# Docker group
#==========================================================================================================================================
#HEALTHCHECK CMD mvn -version
HEALTHCHECK CMD ansible --version
#==========================================================================================================================================